----- COMPLETE SYSTEM (LocalScript in StarterPlayerScripts) -----
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local TS = game:GetService("TweenService")

-- CONFIGURATION --
local OorN = false
local MAINTENANCE_DATE = "21/4/2025"
local player = Players.LocalPlayer

-- MAINTENANCE CHECK --
if not OorN then
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "⚠️ UPDATE IN PROGRESS ⚠️",
        Text = "Please wait until: "..MAINTENANCE_DATE,
        Duration = 10
    })
    return
end

-- CORE SYSTEMS --
local gui = Instance.new("ScreenGui", player.PlayerGui)
gui.ResetOnSpawn = false
gui.Enabled = false

local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 700, 0, 500)
mainFrame.Position = UDim2.new(0.5, -350, 0.5, -250)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
mainFrame.Visible = false
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundTransparency = 1
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 20)

-- TITLE WITH DRAG --
local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(1, 0, 0, 60)
title.Text = "Made by -SkillSpawnPlayz"
title.Font = Enum.Font.SciFi
title.TextColor3 = Color3.new(0, 0.75, 1)
title.TextStrokeColor3 = Color3.new(0, 0, 0)
title.TextStrokeTransparency = 0.3
title.TextSize = 32
title.BackgroundTransparency = 1
title.Active = true

-- ABILITY ROWS (KEPT) --
local function CreateRow(yPos, label)
    local container = Instance.new("Frame", mainFrame)
    container.Size = UDim2.new(1, -40, 0, 60)
    container.Position = UDim2.new(0, 20, yPos, 0)
    container.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel", container)
    lbl.Size = UDim2.new(0.4, 0, 1, 0)
    lbl.Text = label
    lbl.Font = Enum.Font.GothamBold
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.TextSize = 24

    local txt = Instance.new("TextBox", container)
    txt.Size = UDim2.new(0.3, 0, 0.8, 0)
    txt.Position = UDim2.new(0.4, 0, 0.1, 0)
    txt.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
    txt.TextColor3 = Color3.new(1,1,1)
    Instance.new("UICorner", txt).CornerRadius = UDim.new(0, 8)

    local toggle = Instance.new("TextButton", container)
    toggle.Size = UDim2.new(0.25, 0, 0.8, 0)
    toggle.Position = UDim2.new(0.75, 0, 0.1, 0)
    toggle.Text = "OFF"
    toggle.Font = Enum.Font.GothamBold
    toggle.TextColor3 = Color3.new(1,1,1)
    toggle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 8)

    return txt, toggle
end

local jumpTxt, jumpToggle = CreateRow(0.15, "Jump Height:")
local speedTxt, speedToggle = CreateRow(0.35, "Run Speed:")
local flightTxt, flightToggle = CreateRow(0.55, "Flight Power:")

-- INPUT HANDLING (KEPT) --
local active = {Jump = false, Speed = false, Flight = false}
local values = {Jump = 50, Speed = 16, Flight = 50}

local function HandleInput(txtBox, valueName)
    txtBox.FocusLost:Connect(function()
        values[valueName] = tonumber(txtBox.Text) or values[valueName]
        txtBox.Text = tostring(values[valueName])
    end)
end

HandleInput(jumpTxt, "Jump")
HandleInput(speedTxt, "Speed")
HandleInput(flightTxt, "Flight")

-- TOGGLE SYSTEM (KEPT) --
local function ToggleSystem(btn, stateName)
    btn.MouseButton1Click:Connect(function()
        active[stateName] = not active[stateName]
        btn.Text = active[stateName] and "ON" or "OFF"
        TS:Create(btn, TweenInfo.new(0.2), {
            BackgroundColor3 = active[stateName] and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(80, 80, 80)
        }):Play()
    end)
end

ToggleSystem(jumpToggle, "Jump")
ToggleSystem(speedToggle, "Speed")
ToggleSystem(flightToggle, "Flight")

-- FLIGHT SYSTEM (KEPT) --
local flightVelocity, flightGyro
RS.Heartbeat:Connect(function()
    local chr = player.Character
    if not chr then return end
    local root = chr:FindFirstChild("HumanoidRootPart")
    local hum = chr:FindFirstChildOfClass("Humanoid")
    
    if hum then
        hum.JumpPower = active.Jump and values.Jump or 50
        hum.WalkSpeed = active.Speed and values.Speed or 16
        
        if active.Flight and root then
            if not flightVelocity then
                flightVelocity = Instance.new("BodyVelocity", root)
                flightVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
                flightGyro = Instance.new("BodyGyro", root)
                flightGyro.MaxTorque = Vector3.new(10000, 10000, 10000)
            end
            
            local cam = workspace.CurrentCamera.CFrame
            local moveVec = Vector3.new(
                UIS:IsKeyDown(Enum.KeyCode.D) and 1 or UIS:IsKeyDown(Enum.KeyCode.A) and -1 or 0,
                UIS:IsKeyDown(Enum.KeyCode.Space) and 1 or UIS:IsKeyDown(Enum.KeyCode.LeftShift) and -1 or 0,
                UIS:IsKeyDown(Enum.KeyCode.W) and -1 or UIS:IsKeyDown(Enum.KeyCode.S) and 1 or 0
            )
            
            flightVelocity.Velocity = cam:VectorToWorldSpace(moveVec) * values.Flight
            flightGyro.CFrame = cam
        else
            if flightVelocity then flightVelocity:Destroy() end
            if flightGyro then flightGyro:Destroy() end
        end
    end
end)

-- TELEPORT SYSTEM (KEPT) --
local tpBox = Instance.new("TextBox", mainFrame)
tpBox.Size = UDim2.new(0.6, 0, 0, 30)
tpBox.Position = UDim2.new(0.05, 0, 0.8, 0)
tpBox.PlaceholderText = "Username"
tpBox.TextColor3 = Color3.new(1,1,1)
Instance.new("UICorner", tpBox).CornerRadius = UDim.new(0, 8)

local tpBtn = Instance.new("TextButton", mainFrame)
tpBtn.Size = UDim2.new(0.3, 0, 0, 30)
tpBtn.Position = UDim2.new(0.65, 0, 0.8, 0)
tpBtn.Text = "TP"
tpBtn.Font = Enum.Font.GothamBold
tpBtn.TextColor3 = Color3.new(1,1,1)
tpBtn.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
Instance.new("UICorner", tpBtn).CornerRadius = UDim.new(0, 8)

tpBtn.MouseButton1Click:Connect(function()
    local target = Players:FindFirstChild(tpBox.Text)
    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
        player.Character:MoveTo(target.Character.HumanoidRootPart.Position + Vector3.new(0, 5, 0))
    end
end)

-- DRAG SYSTEM (KEPT) --
local dragging = false
local dragStart, frameStart

title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        frameStart = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UIS.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            frameStart.X.Scale, 
            frameStart.X.Offset + delta.X,
            frameStart.Y.Scale, 
            frameStart.Y.Offset + delta.Y
        )
    end
end)

-- ANIMATIONS (KEPT) --
local function WoahOpen()
    mainFrame.Visible = true
    TS:Create(mainFrame, TweenInfo.new(0.8, Enum.EasingStyle.Elastic), {
        Size = UDim2.new(0, 700, 0, 500),
        BackgroundTransparency = 0
    }):Play()
end

local function BouncyClose()
    TS:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Bounce), {
        Size = UDim2.new(0, 10, 0, 10),
        BackgroundTransparency = 1
    }):Play()
    task.wait(0.5)
    mainFrame.Visible = false
end

-- TOGGLE VISIBILITY (KEPT) --
UIS.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightShift then
        gui.Enabled = not gui.Enabled
        if gui.Enabled then
            WoahOpen()
        else
            BouncyClose()
        end
    end
end)

print("FULL SYSTEM ACTIVE - PRESS RIGHT SHIFT!")
